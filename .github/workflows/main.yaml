name: main

on:
  release:
    types: [published]

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: 'write'
      packages: 'write'
      actions: 'read'

    steps:
      - name: Setup Actions Bot
        uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.ACTIONS_BOT_ID }}
          private-key: ${{ secrets.ACTIONS_BOT_SECRET }}
          owner: ${{ github.repository_owner }}
          repositories: 'POW-Cards-API'

      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ steps.app-token.outputs.token }}

      - name: Set up Git user
        run: |
          git config --global user.name "${{ secrets.GIT_USER_NAME }}"
          git config --global user.email "${{ secrets.GIT_USER_EMAIL }}"

      - name: Setup node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22.4.1'
          registry-url: 'https://registry.npmjs.org'
          scope: '@passentry'

      - name: Get release version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      - name: Generate SDK
        if: success()
        run: |
          docker run --rm -v "$(pwd)":/local openapitools/openapi-generator-cli generate \
            -i /local/openapi.yaml \
            -g typescript-fetch \
            -o /local/sdks/typescript \
            --additional-properties=npmName=@passentry/pow-cards-client,npmVersion=${{ env.VERSION }},supportsES6=true

      - name: Publish SDK
        if: success()
        run: |
          cd sdks/typescript
          npm install
          npm run build
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Commit SDK Changes
        if: success()
        run: |
          git add sdks/typescript
          git commit -m "chore: update TypeScript SDK to version ${{ env.VERSION }}"
          git push

    
